openapi: 3.0.0
info:
  title: Crypto Trading API
  version: 1.0.0
  description: API for crypto trading and management training
  contact:
    name: VicMtn
    email: victorien.montavon@eduvaud.ch

servers:
  - url: http://localhost:5678/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          description: Username
        email:
          type: string
          format: email
          description: Email
        wallet:
          type: string
          description: Associated wallet ID
    Wallet:
      type: object
      properties:
        balance:
          type: number
          description: Base currency balance (USD)
        assets:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Crypto currency code
              amount:
                type: number
                description: Amount owned
    Transaction:
      type: object
      properties:
        type:
          type: string
          enum: [buy, sell, deposit, withdraw]
          description: Transaction type
        amount:
          type: number
          description: Transaction amount
        code:
          type: string
          description: Crypto currency code (for buy/sell)
        rate:
          type: number
          description: Exchange rate (for buy/sell)
        total:
          type: number
          description: Total amount in base currency
        currency:
          type: string
          description: Base currency of the transaction
        createdAt:
          type: string
          format: date-time
          description: Creation date of the transaction

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: Username
                email:
                  type: string
                  format: email
                  description: Email
                password:
                  type: string
                  format: password
                  description: Password
      responses:
        201:
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid data
        409:
          description: Email or username already used

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: Email
                password:
                  type: string
                  format: password
                  description: Password
      responses:
        200:
          description: Connection successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: Invalid credentials

  /transactions/deposit:
    post:
      tags:
        - Transactions
      summary: Deposit funds
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  description: Amount to deposit
      responses:
        201:
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid amount
        401:
          description: Unauthorized

  /transactions/withdraw:
    post:
      tags:
        - Transactions
      summary: Withdraw funds
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  description: Amount to withdraw
      responses:
        201:
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid amount or insufficient balance
        401:
          description: Unauthorized

  /transactions/buy:
    post:
      tags:
        - Transactions
      summary: Buy crypto currency
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - amount
                - rate
              properties:
                code:
                  type: string
                  description: Crypto currency code (ex. BTC)
                amount:
                  type: number
                  description: Amount to buy
                rate:
                  type: number
                  description: Exchange rate
      responses:
        201:
          description: Purchase successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid parameters or insufficient balance
        401:
          description: Unauthorized

  /transactions/sell:
    post:
      tags:
        - Transactions
      summary: Sell crypto currency
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - amount
                - rate
              properties:
                code:
                  type: string
                  description: Crypto currency code (ex. BTC)
                amount:
                  type: number
                  description: Amount to sell
                rate:
                  type: number
                  description: Exchange rate
      responses:
        201:
          description: Sale successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid parameters or insufficient balance
        401:
          description: Unauthorized

  /transactions/history:
    get:
      tags:
        - Transactions
      summary: Get transaction history
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [buy, sell, deposit, withdraw]
          description: Filter by transaction type
      responses:
        200:
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        401:
          description: Unauthorized 