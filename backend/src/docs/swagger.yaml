openapi: 3.0.0
info:
  title: Melon Tusk API
  version: 1.0.0
  description: API for crypto trading and management training
  contact:
    name: VicMtn
    email: victorien.montavon@eduvaud.ch

servers:
  - url: http://localhost:5678/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 65a1b2c3d4e5f6a7b8c9d0e1
        username:
          type: string
          description: Username
          example: johndoe
        email:
          type: string
          format: email
          description: Email
          example: john.doe@example.com
        wallet:
          type: string
          description: Associated wallet ID
          example: 65a1b2c3d4e5f6a7b8c9d0e2
        createdAt:
          type: string
          format: date-time
          example: "2024-02-23T00:30:40.464Z"
      required:
        - _id
        - username
        - email
        - wallet
        - createdAt

    Wallet:
      type: object
      properties:
        _id:
          type: string
          example: 65a1b2c3d4e5f6a7b8c9d0e2
        userId:
          type: string
          example: 65a1b2c3d4e5f6a7b8c9d0e1
        balance:
          type: number
          description: Base currency balance (USD)
          example: 10000.00
        assets:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Crypto currency code
                example: BTC
              amount:
                type: number
                description: Amount owned
                example: 0.5
              purchasePrice:
                type: number
                description: Average purchase price
                example: 45000.00
              currentValue:
                type: number
                description: Current market value
                example: 48311.96
              profitLoss:
                type: number
                description: Profit/Loss in USD
                example: 3311.96
      required:
        - _id
        - userId
        - balance
        - assets

    Transaction:
      type: object
      properties:
        _id:
          type: string
          example: 65a1b2c3d4e5f6a7b8c9d0e3
        userId:
          type: string
          example: 65a1b2c3d4e5f6a7b8c9d0e1
        type:
          type: string
          enum: [buy, sell, deposit, withdraw]
          description: Transaction type
          example: buy
        amount:
          type: number
          description: Transaction amount
          example: 0.5
        code:
          type: string
          description: Crypto currency code (for buy/sell)
          example: BTC
        rate:
          type: number
          description: Exchange rate (for buy/sell)
          example: 96623.91
        total:
          type: number
          description: Total amount in base currency
          example: 48311.96
        currency:
          type: string
          description: Base currency of the transaction
          example: USD
        createdAt:
          type: string
          format: date-time
          description: Creation date of the transaction
          example: "2024-02-23T00:30:40.464Z"
      required:
        - _id
        - userId
        - type
        - amount
        - total
        - currency
        - createdAt

    CoinData:
      type: object
      properties:
        name:
          type: string
          example: Bitcoin
          description: Full name of the cryptocurrency
        symbol:
          type: string
          nullable: true
          example: BTC
          description: Trading symbol of the cryptocurrency
        rank:
          type: integer
          example: 1
          description: Market rank of the cryptocurrency
        age:
          type: integer
          example: 15
          description: Age of the cryptocurrency in years
        color:
          type: string
          example: "#F7931A"
          description: Brand color of the cryptocurrency
        png32:
          type: string
          example: "https://example.com/btc-32.png"
          description: 32x32 PNG icon URL
        png64:
          type: string
          example: "https://example.com/btc-64.png"
          description: 64x64 PNG icon URL
        webp32:
          type: string
          example: "https://example.com/btc-32.webp"
          description: 32x32 WebP icon URL
        webp64:
          type: string
          example: "https://example.com/btc-64.webp"
          description: 64x64 WebP icon URL
        exchanges:
          type: integer
          nullable: true
          example: 500
          description: Number of exchanges listing this cryptocurrency
        markets:
          type: integer
          nullable: true
          example: 1000
          description: Number of markets for this cryptocurrency
        pairs:
          type: integer
          nullable: true
          example: 2000
          description: Number of trading pairs available
        allTimeHighUSD:
          type: number
          example: 69000.00
          description: All-time high price in USD
        circulatingSupply:
          type: number
          example: 19500000
          description: Current circulating supply
        totalSupply:
          type: number
          example: 21000000
          description: Total supply of the cryptocurrency
        maxSupply:
          type: number
          nullable: true
          example: 21000000
          description: Maximum possible supply
        categories:
          type: array
          nullable: true
          items:
            type: string
          example: ["Cryptocurrency", "Layer 1"]
          description: Categories the cryptocurrency belongs to
        links:
          type: object
          properties:
            website:
              type: string
              nullable: true
              example: "https://bitcoin.org"
              description: Official website URL
            whitepaper:
              type: string
              nullable: true
              example: "https://bitcoin.org/bitcoin.pdf"
              description: Whitepaper URL
            twitter:
              type: string
              nullable: true
              example: "https://twitter.com/bitcoin"
              description: Twitter profile URL
            reddit:
              type: string
              nullable: true
              example: "https://reddit.com/r/bitcoin"
              description: Reddit community URL
            telegram:
              type: string
              nullable: true
              example: "https://t.me/bitcoin"
              description: Telegram group URL
            discord:
              type: string
              nullable: true
              example: "https://discord.gg/bitcoin"
              description: Discord server URL
            medium:
              type: string
              nullable: true
              example: "https://medium.com/@bitcoin"
              description: Medium blog URL
            instagram:
              type: string
              nullable: true
              example: "https://instagram.com/bitcoin"
              description: Instagram profile URL
            tiktok:
              type: string
              nullable: true
              example: "https://tiktok.com/@bitcoin"
              description: TikTok profile URL
            youtube:
              type: string
              nullable: true
              example: "https://youtube.com/bitcoin"
              description: YouTube channel URL
            linkedin:
              type: string
              nullable: true
              example: "https://linkedin.com/company/bitcoin"
              description: LinkedIn company page URL
            twitch:
              type: string
              nullable: true
              example: "https://twitch.tv/bitcoin"
              description: Twitch channel URL
            spotify:
              type: string
              nullable: true
              example: "https://open.spotify.com/artist/bitcoin"
              description: Spotify artist page URL
            naver:
              type: string
              nullable: true
              example: "https://blog.naver.com/bitcoin"
              description: Naver blog URL
            wechat:
              type: string
              nullable: true
              example: "https://weixin.qq.com/bitcoin"
              description: WeChat official account URL
            soundcloud:
              type: string
              nullable: true
              example: "https://soundcloud.com/bitcoin"
              description: SoundCloud profile URL
          required:
            - website
            - whitepaper
            - twitter
            - reddit
            - telegram
            - discord
            - medium
            - instagram
            - tiktok
            - youtube
            - linkedin
            - twitch
            - spotify
            - naver
            - wechat
            - soundcloud
        code:
          type: string
          example: BTC
          description: Unique identifier code
        rate:
          type: number
          example: 96623.9114682842
          description: Current price in USD
        volume:
          type: number
          example: 20579856602
          description: 24h trading volume in USD
        cap:
          type: number
          example: 1915843166895
          description: Market capitalization in USD
        liquidity:
          type: number
          nullable: true
          example: 5000000000
          description: Market liquidity in USD
        delta:
          type: object
          properties:
            hour:
              type: number
              example: 0.9995
              description: Price change in the last hour (percentage)
            day:
              type: number
              example: 1.0076
              description: Price change in the last 24 hours (percentage)
            week:
              type: number
              example: 0.9877
              description: Price change in the last 7 days (percentage)
            month:
              type: number
              example: 0.9315
              description: Price change in the last 30 days (percentage)
            quarter:
              type: number
              example: 0.9881
              description: Price change in the last 90 days (percentage)
            year:
              type: number
              example: 1.8991
              description: Price change in the last 365 days (percentage)
          required:
            - hour
            - day
            - week
            - month
            - quarter
            - year
        lastUpdated:
          type: string
          format: date-time
          example: "2024-02-23T00:30:40.464Z"
          description: Last update timestamp
        createdAt:
          type: string
          format: date-time
          example: "2024-02-23T00:30:40.464Z"
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          example: "2024-02-23T00:30:40.464Z"
          description: Last update timestamp
      required:
        - name
        - rank
        - age
        - color
        - png32
        - png64
        - webp32
        - webp64
        - allTimeHighUSD
        - circulatingSupply
        - totalSupply
        - links
        - code
        - rate
        - volume
        - cap
        - delta
        - lastUpdated
        - createdAt
        - updatedAt

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: Username
                  example: johndoe
                email:
                  type: string
                  format: email
                  description: Email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  description: Password (min 8 characters, must contain numbers and special characters)
                  example: "StrongP@ssw0rd123"
      responses:
        201:
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account created successfully
                  user:
                    $ref: '#/components/schemas/User'
        400:
          description: Invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid input data
        409:
          description: Email or username already used
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Email or username already exists

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: Email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  description: Password
                  example: "StrongP@ssw0rd123"
      responses:
        200:
          description: Connection successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  expiresIn:
                    type: integer
                    example: 3600
                    description: Token expiration time in seconds
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid email or password

  /wallet:
    get:
      tags:
        - Wallet
      summary: Get user's wallet
      security:
        - bearerAuth: []
      responses:
        200:
          description: Wallet retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /transactions/deposit:
    post:
      tags:
        - Transactions
      summary: Deposit funds
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  description: Amount to deposit
                  example: 1000.00
      responses:
        201:
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid amount
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid deposit amount
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /transactions/withdraw:
    post:
      tags:
        - Transactions
      summary: Withdraw funds
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  description: Amount to withdraw
                  example: 500.00
      responses:
        201:
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid amount or insufficient balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Insufficient balance
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /transactions/buy:
    post:
      tags:
        - Transactions
      summary: Buy crypto currency
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - amount
                - rate
              properties:
                code:
                  type: string
                  description: Crypto currency code (ex. BTC)
                  example: BTC
                amount:
                  type: number
                  description: Amount to buy
                  example: 0.5
                rate:
                  type: number
                  description: Exchange rate
                  example: 96623.91
      responses:
        201:
          description: Purchase successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid parameters or insufficient balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Insufficient balance or invalid parameters
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /transactions/sell:
    post:
      tags:
        - Transactions
      summary: Sell crypto currency
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - amount
                - rate
              properties:
                code:
                  type: string
                  description: Crypto currency code (ex. BTC)
                  example: BTC
                amount:
                  type: number
                  description: Amount to sell
                  example: 0.5
                rate:
                  type: number
                  description: Exchange rate
                  example: 96623.91
      responses:
        201:
          description: Sale successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: Invalid parameters or insufficient balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Insufficient balance or invalid parameters
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /transactions/history:
    get:
      tags:
        - Transactions
      summary: Get transaction history
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [buy, sell, deposit, withdraw]
          description: Filter by transaction type
          example: buy
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          description: Start date for filtering
          example: "2024-02-01T00:00:00Z"
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          description: End date for filtering
          example: "2024-02-23T23:59:59Z"
      responses:
        200:
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /market/fear-and-greed:
    get:
      tags:
        - Market Data
      summary: Get the Fear and Greed Index
      security:
        - bearerAuth: []
      responses:
        200:
          description: Fear and Greed Index retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: integer
                    description: Current Fear and Greed Index value (0-100)
                    example: 65
                  classification:
                    type: string
                    description: Classification of the current market sentiment
                    example: "Greed"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-02-23T00:30:40.464Z"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /market/coins-top50:
    get:
      tags:
        - Market Data
      summary: Get top 50 cryptocurrencies by market cap
      security:
        - bearerAuth: []
      responses:
        200:
          description: Top 50 coins retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-02-23T00:30:40.464Z"
                  coins:
                    type: array
                    items:
                      $ref: '#/components/schemas/CoinData'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /market/coin/{code}:
    get:
      tags:
        - Market Data
      summary: Get detailed information about a specific coin
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
          description: Coin code (e.g., BTC for Bitcoin)
          example: BTC
      responses:
        200:
          description: Coin data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-02-23T00:30:40.464Z"
                  coin:
                    $ref: '#/components/schemas/CoinData'
        400:
          description: Invalid coin code
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid coin code
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token

  /market/articles:
    get:
      tags:
        - Market Data
      summary: Get latest cryptocurrency news articles
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 50
          description: Maximum number of articles to return
          example: 10
        - in: query
          name: category
          schema:
            type: string
            enum: [general, bitcoin, ethereum, altcoins, mining, trading]
          description: Filter articles by category
          example: bitcoin
      responses:
        200:
          description: Articles retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-02-23T00:30:40.464Z"
                  articles:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Article title
                          example: "Bitcoin Reaches New All-Time High"
                        url:
                          type: string
                          description: Article URL
                          example: "https://example.com/article"
                        source:
                          type: string
                          description: News source
                          example: "CryptoNews"
                        publishedAt:
                          type: string
                          format: date-time
                          description: Publication date
                          example: "2024-02-23T00:30:40.464Z"
                        category:
                          type: string
                          description: Article category
                          example: "bitcoin"
                      required:
                        - title
                        - url
                        - source
                        - publishedAt
                        - category
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token 